#!/bin/bash -e

# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2021-2022, Marcin Åšlusarz <marcin.slusarz@gmail.com>

set -o pipefail

treeopts=
cutopts=
indentcol=name
OPTIND=1

treesumopts="--sum size,size_sum"

incolumns=full_path,parent,name,size,type_mode,nlink,owner_name,group_name,symlink,mtime
outcolumns=type_mode,nlink,owner_name,group_name,size,size_sum,mtime,NAME,symlink

function append_column() {
    if [ "$1" != "" ]; then
        if [ "$incolumns" = "" ]; then
            incolumns=$1
        else
            incolumns=$incolumns,$1;
        fi
    fi

    if [ "$2" != "" ]; then
        if [ "$outcolumns" = "" ]; then
            outcolumns=$2
        else
            outcolumns=$outcolumns,$2;
        fi
    fi
}

customcolumns=0

while getopts "c:fLsS" opt; do
    case "$opt" in
    c)  full_path_exists=0
        parent_exists=0
        name_exists=0
        size_exists=0
        size_sum_exists=0
        incolumns=""
        outcolumns=""
        for col in $(echo $OPTARG | tr "," "\n")
        do
            if   [ "$col" = "size_sum"       ]; then size_sum_exists=1; append_column "size" "size_sum";
            elif [ "$col" = "level"          ]; then treeopts=-L;       append_column "" "level";
            else
                append_column "$col" "$col"
                if   [ "$col" = "full_path"  ]; then full_path_exists=1;
                elif [ "$col" = "parent"     ]; then parent_exists=1;
                elif [ "$col" = "name"       ]; then name_exists=1;
                elif [ "$col" = "size"       ]; then size_exists=1;
                fi
            fi
        done

	# columns we must have for csv-tree
        if [ "$full_path_exists" = "0" ]; then append_column "full_path" ""; fi
        if [ "$parent_exists"    = "0" ]; then append_column "parent" ""; fi
        if [ "$name_exists"      = "0" ]; then append_column "name" ""; fi

        if [ "$size_sum_exists" = "0" ]; then
            treesumopts="";
        fi
        customcolumns=1
        ;;
    f)  indentcol=full_path
        ;;
    L)  treeopts=-L
        outcolumns=level,$outcolumns
        ;;
    s)  cutopts=-s
        ;;
    S)  cutopts=-S
        ;;
    esac
done

shift $((OPTIND-1))

if [ "$customcolumns" = "0" ]; then
    outcolumns=$(echo "$outcolumns" | sed "s/,NAME,/,$indentcol,/")
fi

csv-ls -a -c $incolumns -R "$@" | \
	csv-grep -v -c name -x -F . -c name -x -F .. | \
	csv-tree --key full_path --parent parent --indent $indentcol $treesumopts $treeopts | \
	csv-cut -c $outcolumns $cutopts
